server.port=8086
spring.kafka.properties.cloud=true

#Name of project
project.name=MailWorker
#REST
server.servlet.context-path=/mail_worker

#Redis
spring.redis.clusters=${REDIS_URL}
spring.redis.host=${REDIS_URL}
spring.redis.password=${REDIS_PASSWORD}
spring.redis.port=${REDIS_PORT}
spring.redis.lettuce.pool.max-active=8

#DB
spring.datasource.url=${MAIL_WORKER_DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.properties.hibernate.default_schema=dbo
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.database-platform=org.hibernate.dialect.SQLServer2012Dialect
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=always
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.open-in-view=false
spring.jpa.show-sql=true
spring.jpa.database=sql_server

gt247cfd_data_access_api_url=${MAIN_DB_ACCESS_LAYER_API_URL}

#Kafka
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.bootstrap.servers=${KAFKA_SERVER_URL}
spring.kafka.properties.delivery.timeout.ms=2147483647

#Kafka consumer
spring.kafka.consumer.group-id=${project.name}_consumer
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#transactional reading
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.isolation-level=read_committed

#Kafka Producer
spring.kafka.producer.client-id=${project.name}_producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
##idempotency and transactional on producer
spring.kafka.producer.transaction-id-prefix=tx-${project.name}-
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.transactional.id=${project.name}-id-1

#schema registry
spring.kafka.properties.schema.registry.url=${KAFKA_SCHEMA_REGISTRY_URL}
spring.kafka.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.properties.schema.registry.basic.auth.user.info=${KAFKA_SCHEMA_REGISTRY_USERNAME_KEY}:${KAFKA_SCHEMA_REGISTRY_PASSWORD_KEY}

#Kafka Confluent cloud security settings
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_USERNAME}'   password='${KAFKA_PASSWORD_KEY}';
spring.kafka.properties.security.protocol=SASL_SSL

management.endpoint.health.enabled=true
management.endpoint.metrics.enabled=true

management.endpoints.web.exposure.include=*